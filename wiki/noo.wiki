#summary 不面向对象如何处理库的名字的冲突

= 不面向对象如何处理库的名字的冲突 =
<pre>
1、库名
用“赋予库名以【顶】‘参数0’。”来使作为库名的变量名成为库所在的路径的名字，这样便不会重复
2、库里的函数名
变量名可以使用类同“【‘库名’】重定向输出”这样的写法来使同一名字有多个“化身”
默认情况下这个变量是最后一次赋的值，当它被删除时会恢复成前一次的值，直至所有“化身”都删除了才会完全删除此变量
这时访问这个变量肯定是最近加载的库里的值
也可以通过类同“【redireconsoi】重定向输出”、“【lib/redireconsoi】重定向输出”这样的名字来访问所期待的那个值
3、删除时的“连坐”
删除一个变量时会把跟他关联的变量也删除掉，会进行递归删除，就是“祸及子子孙孙”
简单说“删除‘库名’。”就是所有跟他相关的函数名都会被删除
4、其他
参数0求值时名字后面的-会被去掉
</pre>