#summary 交流2

= 交流2 =
其实也不能完全这么说。可能你觉得这么做毫无意义，但是如果你深入其中，或许会有新的体会。就好像国内的人们常说的“重造车轮”理论一样，每一个深入到这里面的人，肯定会有更多的收获。所以，时间上来说，未必是浪费了。你认为那是无用功，也许作者却因此对脚本的解释、语法的解析有了更深入的掌握，这是种自我的提升。所以，“浪费时间”，未必是这么必然的。

诚然，让计算机按照我们的意愿工作，是一件令人兴奋的事，每一个不是为了谋生从事这个行业的人，都会有这样的体会。其实，我倒是认为，社会的进步的一个显著特征是，技术的日趋专业化。举例来说，原来的数学，现在要变成概率 统计 集合类的众多分支，而人们的研究日趋专业化。计算机当然要为人而用，也有越来越多的专业型的软件进入每个普通人的世界（Photoshop是很好的例子），所以，是软件让人们更多的去使用计算机，是无数的专业的程序员给普通的用户带来了这些。

嗯，有些乱哈。我的观点：作为引导性的语言未尝不可，起码可以给那些想接触而受限于英语的人带来了福音：）zhscript是有语法的，我在原来的帖子里并没有否认~  但是，如果没有更多的吸引人的特性，就很难发展起来。比如，我学习python，是因为它简洁的语法，优美的实现以及丰富的类库等。就是这样，有些东西，让你能够被吸引。

------

至于造轮子，现今早非大锅饭年代，那种一阵标榜而后烟消云散的事情已不复返了，我写zhscript是因为没有相类似的解释器，如若有，我会参与其中，再者zhscript只是提供一种接口，后面连接的是成熟的广泛应用的诸如libstdc、gtkmm、xml、socket等等，“全部推倒，用汉字重写”这种前人我可不会去当

技术的发展的确是不断细化，也不断会出现新领域，我想zhscript的定位是小应用语言，即不曾编程过的简单看看就能开始，也当然学会了便想再深一步了解计算机世界的弃他而投“明”亦不失一桩乐事，我想zhscript本身就是一个纯粹的不务他的解释内核，而通过调用外部库和专用外壳程序来构建应用，我目前在做的gtkmmsh就是一种紧密结合的通用的外壳，用这种外壳来再做个中间层把复杂问题简单化，比如“人品测试机”可以最小化到托盘，而实现此功能只是代码加入一句“隧道最小化到托盘。”而已

从对“格式”是否看重这点来讲，zhscript跟python真是正好相反，zhscript根本不在乎如何书写，以至于可以费力不讨好地写成 python那种“样子”，而至于类库，面向对象对于专业人员参与大型软件项目是利器乃至基础，但对于小应用实乃牛刀，带名字空间、包名、类名的 helloworld让我有点莫名的好笑，虽然“那只是个示范，那根本没错”